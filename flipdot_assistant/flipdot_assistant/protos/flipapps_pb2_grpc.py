# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from flipdot_assistant.protos import flipapps_pb2 as flipdot__assistant_dot_protos_dot_flipapps__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FlipAppsStub(object):
  """The flipdot applications service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Text = channel.unary_unary(
        '/flipapps.FlipApps/Text',
        request_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.TextRequest.SerializeToString,
        response_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.FlipAppResponse.FromString,
        )
    self.Weather = channel.unary_unary(
        '/flipapps.FlipApps/Weather',
        request_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.WeatherRequest.SerializeToString,
        response_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.FlipAppResponse.FromString,
        )
    self.Clock = channel.unary_unary(
        '/flipapps.FlipApps/Clock',
        request_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.ClockRequest.SerializeToString,
        response_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.FlipAppResponse.FromString,
        )
    self.GetDisplay = channel.unary_unary(
        '/flipapps.FlipApps/GetDisplay',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.DisplayResponse.FromString,
        )


class FlipAppsServicer(object):
  """The flipdot applications service
  """

  def Text(self, request, context):
    """Display some text
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Weather(self, request, context):
    """Display the weather for a given location
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Clock(self, request, context):
    """Display the time
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDisplay(self, request, context):
    """Get the last image to be written to the display
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FlipAppsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Text': grpc.unary_unary_rpc_method_handler(
          servicer.Text,
          request_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.TextRequest.FromString,
          response_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.FlipAppResponse.SerializeToString,
      ),
      'Weather': grpc.unary_unary_rpc_method_handler(
          servicer.Weather,
          request_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.WeatherRequest.FromString,
          response_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.FlipAppResponse.SerializeToString,
      ),
      'Clock': grpc.unary_unary_rpc_method_handler(
          servicer.Clock,
          request_deserializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.ClockRequest.FromString,
          response_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.FlipAppResponse.SerializeToString,
      ),
      'GetDisplay': grpc.unary_unary_rpc_method_handler(
          servicer.GetDisplay,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=flipdot__assistant_dot_protos_dot_flipapps__pb2.DisplayResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'flipapps.FlipApps', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
